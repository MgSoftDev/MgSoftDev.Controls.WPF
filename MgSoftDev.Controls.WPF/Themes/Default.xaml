<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MgSoftDev.Controls.WPF.MessageBox"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:converters="clr-namespace:MgSoftDev.Controls.WPF.Helpers.Converters"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
                    xmlns:notification="clr-namespace:MgSoftDev.Controls.WPF.Notification"
                    xmlns:wpf="clr-namespace:MgSoftDev.Controls.WPF">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="pack://application:,,,/MgSoftDev.Controls.WPF;component/Themes/MgTabControlTheme.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ItemsPanelTemplate x:Key="ItemsControlPanelStackHorizontal">
        <StackPanel Orientation="Horizontal" />
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="ItemsControlPanelStackVertical">
        <StackPanel Orientation="Vertical" />
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="ItemsControlPanelWrapPanelHorizontal">
        <WrapPanel Orientation="Horizontal" IsItemsHost="True"></WrapPanel>
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="ItemsControlPanelWrapPanelVertical">
        <WrapPanel Orientation="Vertical" IsItemsHost="True"></WrapPanel>
    </ItemsPanelTemplate>


    <converters:ToTypeConverter x:Key="ToTypeConverter" />
    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <!--MessageBoxDialogControl-->
    <Style TargetType="{x:Type controls:MessageBoxDialogControl}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Icon, RelativeSource={ RelativeSource Self}}" Value="Error">
                <Setter Property="Background" Value="DarkBlue"></Setter>
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="IconBackground" Value="DarkRed"></Setter>
                <Setter Property="IconForeground" Value="White"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Icon, RelativeSource={ RelativeSource Self}}" Value="Warning">
                <Setter Property="Background" Value="DarkBlue"></Setter>
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="IconBackground" Value="Gold"></Setter>
                <Setter Property="IconForeground" Value="Black"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Icon, RelativeSource={ RelativeSource Self}}" Value="Question">
                <Setter Property="Background" Value="DarkBlue"></Setter>
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="IconBackground" Value="DarkBlue"></Setter>
                <Setter Property="IconForeground" Value="White"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Icon, RelativeSource={ RelativeSource Self}}" Value="Information">
                <Setter Property="Background" Value="DarkBlue"></Setter>
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="IconBackground" Value="DarkBlue"></Setter>
                <Setter Property="IconForeground" Value="White"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Icon, RelativeSource={ RelativeSource Self}}" Value="Successful">
                <Setter Property="Background" Value="DarkBlue"></Setter>
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="IconBackground" Value="Green"></Setter>
                <Setter Property="IconForeground" Value="White"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Icon, RelativeSource={ RelativeSource Self}}" Value="Custom">
                <Setter Property="Background" Value="DarkBlue"></Setter>
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="IconBackground" Value="DarkBlue"></Setter>
                <Setter Property="IconForeground" Value="White"></Setter>
            </DataTrigger>
           
        </Style.Triggers>
        <Setter Property="Background" Value="DarkBlue" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="IconBackground" Value="DarkBlue"></Setter>
        <Setter Property="IconForeground" Value="White"></Setter>
        <Setter Property="BorderBrush" Value="GreenYellow" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:MessageBoxDialogControl}">
                    <Grid  VerticalAlignment="Top" x:Name="Root">
                        <Border x:Name="MainBorder" RenderTransformOrigin="0.5,0" CornerRadius="15"
                                Margin="20,50,20,20" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="Loaded">
                                    <b:ControlStoryboardAction>
                                        <b:ControlStoryboardAction.Storyboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                    Storyboard.TargetName="MainBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.900" Value="0" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1.000" Value="2" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1.100" Value="-2" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1.200" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </b:ControlStoryboardAction.Storyboard>
                                    </b:ControlStoryboardAction>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>

                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="10" Color="#FF4B4B4B" />
                            </Border.Effect>
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="60" />
                                </Grid.RowDefinitions>


                                <Border Grid.Row="1" Margin="10,0,10,0">
                                    <ContentControl x:Name="Header" Focusable="False"
                                                    Content="{TemplateBinding Header}">
                                        <b:Interaction.Triggers>
                                            <b:DataTrigger
                                                Binding="{Binding Header, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToTypeConverter}}"
                                                Value="{x:Type sys:String}">
                                                <b:ChangePropertyAction TargetName="Header" PropertyName="Content">
                                                    <b:ChangePropertyAction.Value>
                                                        <TextBlock Text="{TemplateBinding Header}" Foreground="Yellow"
                                                                   Margin="3" HorizontalAlignment="Center"
                                                                   TextWrapping="Wrap" FontSize="25" />
                                                    </b:ChangePropertyAction.Value>
                                                </b:ChangePropertyAction>
                                            </b:DataTrigger>
                                        </b:Interaction.Triggers>
                                    </ContentControl>

                                </Border>
                                <Grid Grid.Row="2">
                                    <ContentControl x:Name="Content" FontSize="16" Content="{TemplateBinding Content}"
                                                    Focusable="False"
                                                    Margin="15">
                                        <b:Interaction.Triggers>
                                            <b:DataTrigger
                                                Binding="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ToTypeConverter}}"
                                                Value="{x:Type sys:String}">
                                                <b:ChangePropertyAction TargetName="Content" PropertyName="Content">
                                                    <b:ChangePropertyAction.Value>
                                                        <TextBlock Text="{TemplateBinding Content}"
                                                                   Foreground="{TemplateBinding Foreground}"
                                                                   TextWrapping="Wrap" FontSize="18" />
                                                    </b:ChangePropertyAction.Value>
                                                </b:ChangePropertyAction>
                                            </b:DataTrigger>
                                        </b:Interaction.Triggers>
                                    </ContentControl>
                                </Grid>
                                <Border Grid.Row="3" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="0,2,0,0">
                                    <StackPanel Margin="0,5,15,5" Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button x:Name="CancelBtn" Background="DeepSkyBlue"
                                                Margin="20,0,0,0"
                                                MinWidth="100" HorizontalAlignment="Left" Visibility="Collapsed"
                                                IsCancel="False" Foreground="White"
                                                Height="Auto">
                                            <TextBlock x:Name="CancelText" Text="{TemplateBinding CancelLabel}" />
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Click">
                                                    <b:CallMethodAction MethodName="Cancel"
                                                                        TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                                </b:EventTrigger>
                                                <b:DataTrigger
                                                    Binding="{Binding Buttons, RelativeSource={RelativeSource  TemplatedParent}}"
                                                    Value="OKCancel">
                                                    <b:ChangePropertyAction PropertyName="IsCancel" Value="True" />
                                                    <b:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                                </b:DataTrigger>
                                                <b:DataTrigger
                                                    Binding="{Binding Buttons, RelativeSource={RelativeSource  TemplatedParent}}"
                                                    Value="YesNoCancel">
                                                    <b:ChangePropertyAction PropertyName="IsCancel" Value="True" />
                                                    <b:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                                </b:DataTrigger>
                                            </b:Interaction.Triggers>
                                        </Button>

                                        <Button x:Name="NotBtn" Background="DeepSkyBlue"
                                                Margin="20,0,0,0" MinWidth="100" Foreground="White"
                                                HorizontalAlignment="Left" Visibility="Collapsed" Height="Auto">
                                            <TextBlock x:Name="NotText" Text="{TemplateBinding NotLabel}" />
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Click">
                                                    <b:CallMethodAction MethodName="Not"
                                                                        TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                                </b:EventTrigger>
                                                <b:DataTrigger
                                                    Binding="{Binding Buttons, RelativeSource={RelativeSource  TemplatedParent}}"
                                                    Value="YesNo">
                                                    <b:ChangePropertyAction PropertyName="IsCancel" Value="True" />
                                                    <b:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                                </b:DataTrigger>
                                                <b:DataTrigger
                                                    Binding="{Binding Buttons, RelativeSource={RelativeSource  TemplatedParent}}"
                                                    Value="YesNoCancel">
                                                    <b:ChangePropertyAction PropertyName="IsCancel" Value="True" />
                                                    <b:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                                </b:DataTrigger>
                                            </b:Interaction.Triggers>
                                        </Button>

                                        <Button x:Name="YesBtn" Background="DeepSkyBlue"
                                                Margin="20,0,0,0" MinWidth="100" Foreground="White"
                                                HorizontalAlignment="Right" Visibility="Visible" Height="Auto"

                                                IsDefault="True">
                                            <TextBlock x:Name="YesText" FontWeight="Bold"
                                                       Text="{TemplateBinding OkLabel}">
                                                <b:Interaction.Triggers>
                                                    <b:DataTrigger
                                                        Binding="{Binding Buttons, RelativeSource={RelativeSource  TemplatedParent}}"
                                                        Value="YesNo">
                                                        <b:ChangePropertyAction PropertyName="Text"
                                                            Value="{Binding YesLabel, RelativeSource={RelativeSource TemplatedParent}}" />
                                                    </b:DataTrigger>
                                                    <b:DataTrigger
                                                        Binding="{Binding Buttons, RelativeSource={RelativeSource  TemplatedParent}}"
                                                        Value="YesNoCancel">
                                                        <b:ChangePropertyAction PropertyName="Text"
                                                            Value="{Binding YesLabel, RelativeSource={RelativeSource TemplatedParent}}" />
                                                    </b:DataTrigger>
                                                </b:Interaction.Triggers>
                                            </TextBlock>
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="Click">
                                                    <b:CallMethodAction MethodName="Yes"
                                                                        TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                                </b:EventTrigger>

                                            </b:Interaction.Triggers>
                                        </Button>


                                    </StackPanel>
                                </Border>

                            </Grid>
                        </Border>
                        <Border  Grid.Row="0" Width="100" Height="100" Background="{TemplateBinding Background}"
                                Margin="0,0,0,0" CornerRadius="100" VerticalAlignment="Top"
                                HorizontalAlignment="Center">
                            <Border x:Name="IconBackground"  Background="{TemplateBinding IconBackground}" Margin="5" BorderThickness="2" CornerRadius="100"
                                    BorderBrush="{TemplateBinding Foreground}">
                               
                                <ContentControl Focusable="False" x:Name="Icon" Margin="15" VerticalAlignment="Center"
                                                HorizontalAlignment="Center">
                                    <b:Interaction.Triggers>
                                        <b:DataTrigger
                                            Binding="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                            Value="Warning">
                                            <b:ChangePropertyAction TargetName="Icon" PropertyName="Content">
                                                <b:ChangePropertyAction.Value>
                                                    <Path
                                                        Data="M14.551891,20.867005L17.546864,20.867005 17.546864,23.562989 14.551891,23.562989z M15.051887,8.4869997L17.047905,8.4869997 17.547902,18.970001 14.551891,18.970001z M16.049927,2.5960085L2.6710004,25.459992 29.428791,25.459992z M16.049927,0C16.948906,2.2238159E-07,17.846909,0.49899314,18.24687,1.2980043L31.625796,24.161988C32.124756,24.960999 32.124756,25.959015 31.625796,26.757996 31.1258,27.557007 30.327771,28.056 29.328816,28.056L2.6710004,28.056C1.7720202,28.056 0.87401672,27.557007 0.37499727,26.757996 -0.12499909,25.959015 -0.12499909,24.960999 0.37499727,24.161988L13.852922,1.2980043C14.252943,0.49899314,15.150885,2.2238159E-07,16.049927,0z"
                                                        Stretch="Uniform"
                                                        Fill="{Binding IconForeground, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Margin="0" />
                                                </b:ChangePropertyAction.Value>
                                            </b:ChangePropertyAction>
                                        </b:DataTrigger>

                                        <b:DataTrigger
                                            Binding="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                            Value="Error">
                                            <b:ChangePropertyAction TargetName="Icon" PropertyName="Content">
                                                <b:ChangePropertyAction.Value>
                                                    <Path
                                                        Data="M5.1163335,0C6.4203386,-9.1704351E-08,7.7243743,0.4009941,8.7273803,1.4039678L16.150495,8.1248624 23.27359,1.704927C25.27963,-0.10003502 28.489671,-0.10003502 30.495712,1.704927 32.502731,3.5109269 32.502731,6.4198744 30.495712,8.2258736L23.373596,14.745721 30.094705,20.864637C32.100749,22.670576 32.100749,25.579523 30.094705,27.385523 28.088663,29.190485 24.878623,29.190485 22.871604,27.385523L16.150495,21.26563 9.1293941,27.585531C7.122345,29.39147 3.9123056,29.39147 1.9062939,27.585531 -0.099748187,25.780569 -0.099748187,22.870584 1.9062939,21.065622L8.9283719,14.745721 1.5052868,7.9248535C-0.50176227,6.1188537 -0.50176227,3.2099065 1.5052868,1.4039678 2.5082927,0.50200556 3.8122978,-9.1704351E-08 5.1163335,0z"
                                                        Stretch="Uniform"
                                                        Fill="{Binding IconForeground, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Margin="0,0,0,0"
                                                        RenderTransformOrigin="0.5,0.5" />
                                                </b:ChangePropertyAction.Value>
                                            </b:ChangePropertyAction>
                                        </b:DataTrigger>

                                        <!-- Information -->
                                        <b:DataTrigger
                                            Binding="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                            Value="Information">
                                            <b:ChangePropertyAction TargetName="Icon" PropertyName="Content">
                                                <b:ChangePropertyAction.Value>
                                                    <Path
                                                        Data="M13.5,4A1.5,1.5 0 0,0 12,5.5A1.5,1.5 0 0,0 13.5,7A1.5,1.5 0 0,0 15,5.5A1.5,1.5 0 0,0 13.5,4M13.14,8.77C11.95,8.87 8.7,11.46 8.7,11.46C8.5,11.61 8.56,11.6 8.72,11.88C8.88,12.15 8.86,12.17 9.05,12.04C9.25,11.91 9.58,11.7 10.13,11.36C12.25,10 10.47,13.14 9.56,18.43C9.2,21.05 11.56,19.7 12.17,19.3C12.77,18.91 14.38,17.8 14.54,17.69C14.76,17.54 14.6,17.42 14.43,17.17C14.31,17 14.19,17.12 14.19,17.12C13.54,17.55 12.35,18.45 12.19,17.88C12,17.31 13.22,13.4 13.89,10.71C14,10.07 14.3,8.67 13.14,8.77Z"
                                                        Stretch="Uniform"
                                                        Fill="{Binding IconForeground, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Margin="0,0,0,0" />
                                                </b:ChangePropertyAction.Value>
                                            </b:ChangePropertyAction>
                                        </b:DataTrigger>

                                        <b:DataTrigger
                                            Binding="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                            Value="Question">
                                            <b:ChangePropertyAction TargetName="Icon" PropertyName="Content">
                                                <b:ChangePropertyAction.Value>
                                                    <Path
                                                        Data="M6.1720122,26.640015L12.506012,26.640015 12.506012,31.999023 6.1720122,31.999023z M6.169998,22.900024L6.1737445,22.900024 6.1720122,23.064941z M10.068994,0C13.318025,0 15.754005,0.81201172 17.703046,2.4359741 19.490037,4.0609741 20.463,6.335022 20.463,9.0949707 20.463,10.882019 19.976001,12.669006 18.839034,14.130005 17.701032,15.591003 16.402993,17.052979 14.777989,18.028015 13.967013,18.677002 13.316011,19.328003 12.992036,20.139038 12.667023,20.78894 12.505035,21.764038 12.505035,22.900024L6.1737445,22.900024 6.1758092,22.703424C6.2137826,20.916021 6.5366138,19.440285 7.1460131,18.680054 7.7950018,17.705994 8.9320286,16.567993 10.71902,15.268982 11.693022,14.45697 12.506012,13.481995 13.155,12.507996 13.805026,11.533997 14.129001,10.395996 14.129001,9.2589722 14.129001,7.9589844 13.805026,6.822998 13.155,6.1740112 12.506012,5.3619995 11.531033,5.0360107 10.232019,5.0360107 9.0949925,5.0360107 8.2829788,5.3610229 7.4720028,6.0100098 6.6599892,6.6589966 6.3339995,7.6339722 6.3339995,8.7709961L0,8.7709961 0,8.6079712C1.7478305E-07,5.8480225 0.81097621,3.7360229 2.7600165,2.2739868 4.7099722,0.81201172 6.9829882,0 10.068994,0z"
                                                        Stretch="Uniform"
                                                        Fill="{Binding IconForeground, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Margin="0,0,0,0" />
                                                </b:ChangePropertyAction.Value>
                                            </b:ChangePropertyAction>
                                        </b:DataTrigger>

                                        <b:DataTrigger
                                            Binding="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                            Value="Successful">
                                            <b:ChangePropertyAction TargetName="Icon" PropertyName="Content">
                                                <b:ChangePropertyAction.Value>
                                                    <Path
                                                        Data="M27.903015,0L32,4.0970465 12.369019,23.728029 11.685974,24.520998 0,14.441042 3.7819824,10.054994 11.330017,16.567019z"
                                                        Stretch="Uniform"
                                                        Fill="{Binding IconForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                </b:ChangePropertyAction.Value>
                                            </b:ChangePropertyAction>
                                        </b:DataTrigger>

                                        <b:DataTrigger
                                            Binding="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                            Value="None">
                                            <b:ChangePropertyAction TargetName="Icon" PropertyName="Content"
                                                                    Value="{TemplateBinding CustomIcon}" />
                                        </b:DataTrigger>


                                    </b:Interaction.Triggers>
                                </ContentControl>
                            </Border>
                        </Border>

                    </Grid>

                   
                </ControlTemplate>
            </Setter.Value>

        </Setter>

    </Style>
    <!--END MessageBoxDialogControl-->

    <!--NotificationControl-->
    <Style TargetType="{x:Type notification:NotificationControl}">
        <Setter Property="Margin" Value="10,5,10,5" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform />
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Direction="0" ShadowDepth="0" Opacity=".5" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type notification:NotificationControl}">
                    <Border Padding="10" Focusable="False"
                            MinHeight="{Binding NotificationItem.Height, RelativeSource={RelativeSource TemplatedParent}}"
                            Width="{Binding NotificationItem.Width, RelativeSource={RelativeSource TemplatedParent}}"
                            Background="{Binding NotificationItem.Background, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="MouseLeftButtonUp">
                                <b:CallMethodAction MethodName="Close"
                                                    TargetObject="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                        <Grid Focusable="False" IsHitTestVisible="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="r1" Height="Auto" />
                                <RowDefinition x:Name="r2" Height="*" />
                                <RowDefinition x:Name="r3" Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border Focusable="False" IsHitTestVisible="True" BorderThickness="0" Margin="0,0,10,0"
                                    BorderBrush="#32FFFFFF" Grid.Column="0"
                                    Grid.Row="0"
                                    Grid.RowSpan="3">
                                <Path Focusable="False" IsHitTestVisible="True" Width="32" Height="32"
                                      Stretch="Uniform" VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      Stroke="{Binding NotificationItem.IconStroke, RelativeSource={RelativeSource TemplatedParent}}"
                                      Fill="{Binding NotificationItem.IconFill, RelativeSource={RelativeSource TemplatedParent}}"
                                      Data="{Binding NotificationItem.IconPath, RelativeSource={RelativeSource TemplatedParent}}">
                                </Path>

                            </Border>
                            <TextBlock Focusable="False" IsHitTestVisible="True" x:Name="label"
                                       VerticalAlignment="Center"
                                       Grid.Column="1" Grid.Row="0"
                                       Foreground="{Binding NotificationItem.ForegroundTitle, RelativeSource={RelativeSource TemplatedParent}}"
                                       Text="{Binding NotificationItem.Title, RelativeSource={RelativeSource TemplatedParent}}"
                                       FontFamily="{Binding NotificationItem.FontFamilyTitle, RelativeSource={RelativeSource TemplatedParent}}"
                                       FontSize="{Binding NotificationItem.FontSizeTitle, RelativeSource={RelativeSource TemplatedParent}}"
                                       TextAlignment="Left" TextWrapping="Wrap" FontWeight="Bold" />

                            <TextBlock Focusable="False" IsHitTestVisible="True"
                                       FontSize="{Binding NotificationItem.FontSizeMessage, RelativeSource={RelativeSource TemplatedParent}}"
                                       x:Name="msj" Margin="0,5,0,0" Grid.Column="1" Grid.Row="1"
                                       FontFamily="{Binding NotificationItem.FontFamilyMessage, RelativeSource={RelativeSource TemplatedParent}}"
                                       Foreground="{Binding NotificationItem.ForegroundMessage, RelativeSource={RelativeSource TemplatedParent}}"
                                       Text="{Binding NotificationItem.Message, RelativeSource={RelativeSource TemplatedParent}}"
                                       TextWrapping="Wrap" VerticalAlignment="Top" />

                            <ContentControl Focusable="False" Background="Black" Margin="0,5,0,0"
                                            Grid.Row="2" Grid.Column="1"
                                            Content="{Binding NotificationItem.ActionControl, RelativeSource={RelativeSource TemplatedParent}}"
                                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1"
                                                     Duration="0:0:.4" />
                                    <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX" From="0"
                                                     To="1" Duration="0:0:.2" />
                                    <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="0"
                                                     To="1" Duration="0:0:.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <DataTrigger
                            Binding="{Binding NotificationItem.Message, RelativeSource={RelativeSource Self}}"
                            Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="msj" Value="Collapsed" />
                            <Setter Property="Height" TargetName="r1" Value="*" />
                            <Setter Property="Height" TargetName="r2" Value="Auto" />
                            <Setter Property="Margin" TargetName="label" Value="10" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding NotificationItem.Title, RelativeSource={RelativeSource Self}}"
                            Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="label" Value="Collapsed" />
                            <Setter Property="Height" TargetName="r1" Value="Auto" />
                            <Setter Property="Height" TargetName="r2" Value="*" />
                            <Setter Property="Margin" TargetName="msj" Value="10" />
                        </DataTrigger>
                        <EventTrigger RoutedEvent="notification:NotificationControl.NotificationClosed">
                            <BeginStoryboard>
                                <Storyboard Duration="0:0:.3">
                                    <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX" From="1"
                                                     To="0" Duration="0:0:.3" />
                                    <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="1"
                                                     To="0" Duration="0:0:.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--END NotificationControl-->

    <!--Scroll View-->
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template" Value="{DynamicResource TouchScrollViewerControlTemplate}" />
    </Style>
    <Style TargetType="{x:Type wpf:TouchScrollViewer}">
        <Setter Property="Template" Value="{DynamicResource TouchScrollViewerControlTemplate}" />
    </Style>
    <ControlTemplate x:Key="TouchScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{x:Null}" Grid.Row="1" />
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                    CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}" Grid.Column="0"
                                     Grid.Row="0" />
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar"
                       Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"
                       Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                       ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle}"
                       Width="5" Background="Transparent" BorderBrush="Transparent" />
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar"
                       Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0"
                       Orientation="Horizontal" Grid.Row="1"
                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                       ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource ScrollBarStyle}"
                       Background="{x:Null}" BorderBrush="{x:Null}" Height="5" />
        </Grid>
    </ControlTemplate>


    <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF" />
    <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0" />
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border" SnapsToDevicePixels="true">
                        <!--<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
                    </Border>
                    <!--<ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD" />
    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle" Height="{TemplateBinding Height}" SnapsToDevicePixels="True"
                               Width="{TemplateBinding Width}" RadiusX="2.8" RadiusY="3"
                               Fill="{StaticResource ScrollBar.Static.Thumb}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="rectangle"
                                    Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Fill" TargetName="rectangle"
                                    Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle" Height="{TemplateBinding Height}" SnapsToDevicePixels="True"
                               Width="{TemplateBinding Width}" Fill="{StaticResource ScrollBar.Static.Thumb}"
                               RadiusX="3" RadiusY="3" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="rectangle"
                                    Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Fill" TargetName="rectangle"
                                    Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1,0" />
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="30" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="30" />
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Grid.Row="1" />
                        <RepeatButton Grid.Row="0" x:Name="PART_LineUpButton"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Style="{StaticResource ScrollBarButton}" Background="{x:Null}">
                            <Path x:Name="ArrowTop"
                                  Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
                                  Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform" />
                        </RepeatButton>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}"
                               Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                              Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                              Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2"
                                      Style="{StaticResource ScrollBarButton}">
                            <Path x:Name="ArrowBottom"
                                  Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
                                  Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform" />
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                            <Setter Property="Fill" TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="BorderThickness" Value="0,1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition
                                        MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" Grid.Column="1" />
                                <RepeatButton Grid.Column="0" x:Name="PART_LineLeftButton"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowLeft"
                                          Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
                                          Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform" />
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                      Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                      Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowRight"
                                          Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
                                          Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform" />
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ScrollBarStyle2" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1,0" />
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition
                                MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition
                                MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Grid.Row="1" />
                        <RepeatButton Grid.Row="0" x:Name="PART_LineUpButton"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Style="{StaticResource ScrollBarButton}">
                            <Path x:Name="ArrowTop"
                                  Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
                                  Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform" />
                        </RepeatButton>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}"
                               Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                              Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                              Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2"
                                      Style="{StaticResource ScrollBarButton}">
                            <Path x:Name="ArrowBottom"
                                  Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
                                  Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform" />
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                            <Setter Property="Fill" TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="5" />
                <Setter Property="MinHeight" Value="5" />
                <Setter Property="BorderThickness" Value="0,1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition
                                        MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" Grid.Column="1" />
                                <RepeatButton Grid.Column="0" x:Name="PART_LineLeftButton"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowLeft"
                                          Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
                                          Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform" />
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                      Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                      Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowRight"
                                          Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
                                          Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform" />
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--END Scroll View-->

    <!-- Start WaitControl-->

    <Style TargetType="{x:Type wpf:WaitControl}">


        <Setter Property="Background" Value="#9B000000"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpf:WaitControl}">
                    <Border Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}">
                        <Grid x:Name="RootGrid">
                            <ContentControl Content="{TemplateBinding Content}" VerticalAlignment="Stretch"
                                            HorizontalAlignment="Stretch">
                            </ContentControl>
                            <Grid x:Name="waitGrid"
                                  Visibility="{TemplateBinding Show, Converter={StaticResource BoolToVisibilityConverter}}"
                                  Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="True">
                                <ContentControl Content="{TemplateBinding ShowContent}"></ContentControl>
                            </Grid>
                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>
    <!--End WaitControl-->


</ResourceDictionary>